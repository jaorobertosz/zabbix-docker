version: '3.5'
services:
  zabbix-server:
    container_name: SGD-ZABBIX-SERVER
    image: zabbix/zabbix-server-pgsql:alpine-5.4-latest
    ports:
      - "10051:10051"
    volumes:
      - ./CONF/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
      - ./CONF/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
      - ./CONF/var/lib/zabbix/export:/var/lib/zabbix/export:rw
      - ./CONF/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./CONF/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./CONF/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - ./CONF/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
      - ./CONF/var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:ro
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    env_file:
      - ./env_vars/.env_db_pgsql
      - ./env_vars/.env_srv
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    depends_on:
      - postgres-server
    networks:
      net_backend:
        aliases:
          - zabbix-server
          - zabbix-server-pgsql
          - zabbix-server-alpine-pgsql
          - zabbix-server-pgsql-alpine
      net_frontend:
    stop_grace_period: 30s
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65000
      - net.ipv4.conf.all.accept_redirects=0
      - net.ipv4.conf.all.secure_redirects=0
      - net.ipv4.conf.all.send_redirects=0
    restart: unless-stopped
    labels:
      com.zabbix.description: "Zabbix server with PostgreSQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-server"
      com.zabbix.dbtype: "pgsql"
      com.zabbix.os: "alpine"

  zabbix-web-nginx-pgsql:
    container_name: SGD-ZABBIX-WEB
    image: zabbix/zabbix-web-nginx-pgsql:alpine-5.4-latest
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./CONF/etc/ssl/nginx:/etc/ssl/nginx:ro
      - ./CONF/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro
    env_file:
      - ./env_vars/.env_db_pgsql
      - ./env_vars/.env_web
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    depends_on:
      - postgres-server
      - zabbix-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      net_backend:
        aliases:
          - zabbix-web-nginx-pgsql
          - zabbix-web-nginx-alpine-pgsql
          - zabbix-web-nginx-pgsql-alpine
      net_frontend:
    stop_grace_period: 10s
    sysctls:
      - net.core.somaxconn=65535
    restart: unless-stopped
    labels:
      com.zabbix.description: "Zabbix frontend on Nginx web-server with PostgreSQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-frontend"
      com.zabbix.webserver: "nginx"
      com.zabbix.dbtype: "pgsql"
      com.zabbix.os: "alpine"

  postgres-server:
    container_name: SGD-ZABBIX-BD
    image: postgres:13-alpine
    volumes:
      - ./CONF/var/lib/postgresql/data:/var/lib/postgresql/data:rw
      - ./env_vars/.ZBX_DB_CA_FILE:/run/secrets/root-ca.pem:ro
      - ./env_vars/.ZBX_DB_CERT_FILE:/run/secrets/server-cert.pem:ro
      - ./env_vars/.ZBX_DB_KEY_FILE:/run/secrets/server-key.pem:ro
    env_file:
      - ./env_vars/.env_db_pgsql
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    stop_grace_period: 1m
    networks:
      net_backend:
        aliases:
          - postgres-server
          - pgsql-server
          - pgsql-database
    restart: unless-stopped

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  snmptraps:
  grafana-storage: {}

secrets:
  POSTGRES_USER:
    file: ./env_vars/.POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ./env_vars/.POSTGRES_PASSWORD

networks:
  net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.31.253.0/24
  net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.31.252.0/24

